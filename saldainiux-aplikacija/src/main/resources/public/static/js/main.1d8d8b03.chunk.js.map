{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Categories/PresentList.js","Components/Home/Dovanos.js","App.js","serviceWorker.js","Components/Categories/LetterList.js","Components/Home/Laiskai.js","Components/Categories/AdminPage.js","Components/Home/Administracija.js","index.js"],"names":["Navigation","props","className","to","children","PresentList","handleDetailsClick","event","preventDefault","axios","get","state","presents","undefined","this","data","map","present","value","id","key","name","description","adress","type","href","onClick","then","response","setState","Component","Dovanos","App","Boolean","window","location","hostname","match","LetterList","console","log","currentTarget","letters","letter","surname","body","city","country","AdminPage","handleDeleteLetterClick","delete","handleDeletePresentClick","handleCreatePresentClick","post","Present","Letter","comp1","bind","comp2","for","class","imageURL","forAdults","ReactDOM","render","exact","path","component","Laiskai","Administracija","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qQAoBeA,EAhBE,SAACC,GACd,OACI,yBAAKC,UAAU,oBACX,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,WADJ,QAGI,kBAAC,IAAD,CAAMA,GAAG,YAAT,WAHJ,QAKI,kBAAC,IAAD,CAAMA,GAAG,mBAAT,mBAEHF,EAAMG,W,oDC2BJC,E,YArCX,aAAe,IAAD,8BACV,+CA+BJC,mBAAqB,SAACC,GAClBA,EAAMC,iBACNC,IAAMC,IAAI,oCAhCV,EAAKC,MAAQ,CAACC,SAAU,IAFd,E,sEAKH,IAAD,OACN,YAAgCC,IAA7BC,KAAKH,MAAMC,SAASG,KAChBD,KAAKH,MAAMC,SAASG,KAAKC,KAAI,SAAAC,GAChC,IAAIC,EAAQD,EAAQE,GAChB,OACI,yBAAKjB,UAAU,qBAAqBkB,IAAKH,EAAQE,IAC7C,yBAAKjB,UAAU,aACX,wBAAIA,UAAU,cAAce,EAAQI,MACpC,uBAAGnB,UAAU,aAAae,EAAQK,aAClC,uBAAGpB,UAAU,aAAb,oCAA2De,EAAQM,OAAnE,QAAgFN,EAAQO,MACxF,4BAAQC,KAAK,IAAIvB,UAAU,kBAAkBwB,QAAS,EAAKpB,mBAAoBY,MAAOA,GAAtF,qBAMR,yBAAKhB,UAAU,qBAAqBkB,IAAI,Y,0CAInC,IAAD,OAChBX,IAAMC,IAAI,sCACTiB,MAAK,SAACC,GACP,EAAKC,SAAS,CAACjB,SAAUgB,W,GA7BPE,aCgBXC,E,YAfX,aAAe,IAAD,8BACV,+CACKpB,MAAQ,GAFH,E,sEAOV,OAAQ,yBAAKT,UAAU,aACnB,6BACI,kBAAC,EAAD,Y,GAVM4B,aCiBPE,MAff,WACI,OACI,yBAAK9B,UAAU,aACX,4BAAQA,UAAU,aAClB,6BACI,kBAAC,EAAD,QAGJ,6BACI,kBAAC,EAAD,SCFI+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCuBSC,E,YArCX,aAAe,IAAD,8BACV,+CA+BJhC,mBAAqB,SAACC,GAClBA,EAAMC,iBACN+B,QAAQC,IAAIjC,EAAMkC,cAAcvB,QAhChC,EAAKP,MAAQ,CAAC+B,QAAS,IAFb,E,sEAKH,IAAD,OACN,YAA+B7B,IAA5BC,KAAKH,MAAM+B,QAAQ3B,KACfD,KAAKH,MAAM+B,QAAQ3B,KAAKC,KAAI,SAAA2B,GAC/B,IAAIzB,EAAQyB,EAAOxB,GACf,OACI,yBAAKjB,UAAU,qBAAqBkB,IAAKuB,EAAOxB,IAC5C,yBAAKjB,UAAU,aACX,wBAAIA,UAAU,cAAcyC,EAAOtB,KAAnC,IAA0CsB,EAAOC,SACxC,2BAAID,EAAOE,MACpB,uBAAG3C,UAAU,aAAb,yBAAgDyC,EAAOpB,OAAvD,KAAiEoB,EAAOG,KAAxE,KAAgFH,EAAOI,SACvF,4BAAQtB,KAAK,IAAIvB,UAAU,kBAAkBwB,QAAS,EAAKpB,mBAAoBY,MAAOA,GAAtF,qBAMR,yBAAKhB,UAAU,qBAAqBkB,IAAI,Y,0CAInC,IAAD,OAChBX,IAAMC,IAAI,qCACTiB,MAAK,SAACC,GACP,EAAKC,SAAS,CAACa,QAASd,W,GA7BPE,aCgBVC,E,YAfX,aAAe,IAAD,8BACV,+CACKpB,MAAQ,GAFH,E,sEAOV,OAAQ,yBAAKT,UAAU,aACnB,6BACI,kBAAC,EAAD,Y,GAVM4B,aC2IPkB,E,YA1IX,aAAe,IAAD,8BACV,+CA0HJC,wBAA0B,SAAC1C,GACvBA,EAAMC,iBACNC,IAAMyC,OAAO,wCAAyC,EAAKP,SA7HjD,EAgIdQ,yBAA2B,SAAC5C,GACxBA,EAAMC,iBACNC,IAAMyC,OAAO,yCAA0C,EAAKjC,UAlIlD,EAqIdmC,yBAA2B,SAAC7C,GACxBA,EAAMC,iBACNC,IAAM4C,KAAK,wCAA0C,EAAK1C,MAAM2C,QAAW,EAAK3C,MAAM4C,SArItF,EAAK5C,MAAQ,CAAC+B,QAAS,GACvB9B,SAAU,GACV0C,QAAQ,GACRC,OAAO,IALG,E,sEASH,IAAD,OACN,QAA+B1C,IAA5BC,KAAKH,MAAM+B,QAAQ3B,UAAkDF,IAA7BC,KAAKH,MAAMC,SAASG,KAAmB,CAC9E,IAAIyC,EAAQ1C,KAAKH,MAAM+B,QAAQ3B,KAAKC,KAAI,SAAA2B,GACpC,OACA,yBAAKzC,UAAU,aACX,yBAAKA,UAAU,WAAWkB,IAAKuB,EAAOxB,IACtC,yBAAKjB,UAAU,aACX,wBAAIA,UAAU,cAAcyC,EAAOtB,KAAnC,IAA0CsB,EAAOC,SACxC,2BAAID,EAAOE,MACpB,uBAAG3C,UAAU,aAAb,yBAAgDyC,EAAOpB,OAAvD,KAAiEoB,EAAOG,KAAxE,KAAgFH,EAAOI,SACvF,4BAAQtB,KAAK,IAAIvB,UAAU,kBAAkBwB,QAAS,EAAKuB,wBAAwBQ,KAAK,GAAOvC,MAAOyB,EAAOxB,IAA7G,gBAOZuC,EAAQ5C,KAAKH,MAAMC,SAASG,KAAKC,KAAI,SAAAC,GACjC,OACI,yBAAKf,UAAU,aACf,yBAAKA,UAAU,WAAWkB,IAAKH,EAAQE,IACnC,yBAAKjB,UAAU,aACX,wBAAIA,UAAU,cAAce,EAAQI,MACpC,uBAAGnB,UAAU,aAAae,EAAQK,aAClC,uBAAGpB,UAAU,aAAb,mCAA0De,EAAQM,OAAlE,QAA+EN,EAAQO,MACvF,4BAAQC,KAAK,IAAIvB,UAAU,kBAAkBwB,QAAS,EAAKyB,yBAAyBM,KAAK,GAAOvC,MAAOD,EAAQE,IAA/G,gBAOpB,OAAQ,6BACA,yBAAKjB,UAAU,iBACf,uCACCsD,EACD,6BACA,uCACA,6BACCE,GAED,8BACI,yBAAKxD,UAAU,cACX,yCACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM4C,OAAOlC,QAEzE,yBAAKnB,UAAU,cACX,0CACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM4C,OAAOX,WAEzE,yBAAK1C,UAAU,cACX,0CACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM4C,OAAOT,QAEzE,yBAAK5C,UAAU,cACX,wCACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM4C,OAAOR,WAEzE,yBAAK7C,UAAU,cACX,0CACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM4C,OAAOhC,UAEzE,yBAAKrB,UAAU,cACX,0CACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM4C,OAAOV,QAEzE,yBAAK3C,UAAU,cACX,sDACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM2C,QAAQjC,QAE1E,yBAAKnB,UAAU,cACb,2BAAOyD,IAAI,6BAAX,iBACA,4BAAQC,MAAM,eAAe1C,MAAOJ,KAAKH,MAAM2C,QAAQ9B,MACrD,gDACA,+CACA,kDAGJ,yBAAKtB,UAAU,cACf,uDACA,2BAAOsB,KAAK,OAAOtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM2C,QAAQhC,eAEtE,yBAAKpB,UAAU,cACf,oDACA,2BAAOsB,KAAK,MAAMtB,UAAU,eAAegB,MAAOJ,KAAKH,MAAM2C,QAAQO,YAErE,yBAAK3D,UAAU,cACf,+DACA,4BAAQ0D,MAAM,eAAe1C,MAAOJ,KAAKH,MAAM2C,QAAQQ,WACnD,wCACA,2CAGJ,4BAAQrC,KAAK,IAAIvB,UAAU,kBAAkBwB,QAASZ,KAAKsC,0BAA3D,oBAMJ,OAAQ,gC,0CAIC,IAAD,OAChB3C,IAAMC,IAAI,qCACTiB,MAAK,SAACC,GACP,EAAKC,SAAS,CAACa,QAASd,OAExBnB,IAAMC,IAAI,sCACTiB,MAAK,SAACC,GACP,EAAKC,SAAS,CAACjB,SAAUgB,W,GAxHTE,aCgBTC,E,YAfX,aAAe,IAAD,8BACV,+CACKpB,MAAQ,GAFH,E,sEAOV,OAAQ,yBAAKT,UAAU,aACnB,6BACI,kBAAC,EAAD,Y,GAVM4B,aC0CtBiC,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3C,KAAK,UAAU4C,OAAK,EAACC,KAAK,IAAIC,UAAWnC,EAAKZ,IAAI,YACzD,kBAAC,IAAD,CAAOC,KAAK,UAAU6C,KAAK,WAAWC,UAlCvB,SAAClE,GACpB,OACI,yBAAKC,UAAU,aACX,4BAAQA,UAAU,aAClB,6BACI,kBAAC,EAAD,QAGA,kBAACkE,EAAD,MACJ,yBAAKlE,UAAU,oBAyBgDkB,IAAI,YACvE,kBAAC,IAAD,CAAO8C,KAAK,kBAAkBC,UArB1B,SAAClE,GACT,OACI,yBAAKC,UAAU,aACf,4BAAQA,UAAU,aAClB,6BACI,kBAAC,EAAD,QAGJ,6BACI,kBAACmE,EAAD,SAY4CjD,IAAI,qBAE1CkD,SAASC,eAAe,SL6EpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/C,MAAK,SAAAgD,GACjCA,EAAaC,kB","file":"static/js/main.1d8d8b03.chunk.js","sourcesContent":["import React from 'react';\nimport {Switch, Redirect, Route} from 'react-router';\nimport {BrowserRouter, Link} from 'react-router-dom';\n\nvar Navigation = (props) => {\n    return (\n        <div className=\"container col-12\">\n            <div>\n                <Link to='/'>Dovanos</Link>\n                |&nbsp;\n                <Link to='/laiskai'>Laiskai</Link>\n                |&nbsp;\n                <Link to='/administration'>Administracija</Link>\n            </div>\n            {props.children}\n        </div>\n    );\n    \n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass PresentList extends Component {\n    constructor() {\n        super();\n        this.state = {presents: {}\n        };\n    }\n    render () {\n        if(this.state.presents.data !== undefined)\n        return this.state.presents.data.map(present => {\n            var value = present.id\n                return (\n                    <div className=\"card container col\" key={present.id}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{present.name}</h5>\n                            <p className=\"card-text\">{present.description}</p> \n                            <p className=\"card-text\">This present has to be sent to:  {present.adress} and {present.type}</p>\n                            <button href=\"#\" className=\"btn btn-primary\" onClick={this.handleDetailsClick} value={value}>More details</button>\n                        </div>\n                    </div>\n                );\n        });\n        else{\n            return (<div className=\"card container col\" key='empty'></div>);\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8080/presents/all')\n        .then((response) => {\n        this.setState({presents: response});\n        })\n        }\n\n    handleDetailsClick = (event) => {\n        event.preventDefault()\n        axios.get('http://localhost:8080/presents/')\n    }\n}\nexport default PresentList;\n","import React, {Component} from 'react';\nimport PresentList from '../Categories/PresentList'\n\nclass Dovanos extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        };\n    }\n    render () {\n        return (<div className='container'>\n            <div>\n                <PresentList/>\n            </div>\n        </div>)\n    }\n}\n\nexport default Dovanos;\n","import React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation';\nimport Dovanos from './Components/Home/Dovanos'\n\nfunction App() {\n    return (\n        <div className=\"container\">\n            <header className=\"container\">\n            <div>\n                <Navigation/>\n            </div>\n            </header>\n            <div>\n                <Dovanos/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass LetterList extends Component {\n    constructor() {\n        super();\n        this.state = {letters: {}\n        };\n    }\n    render () {\n        if(this.state.letters.data !== undefined)\n        return this.state.letters.data.map(letter => {\n            var value = letter.id\n                return (\n                    <div className=\"card container col\" key={letter.id}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{letter.name} {letter.surname}</h5>\n                                     <p>{letter.body}</p>\n                            <p className=\"card-text\">This letter came from:{letter.adress}, {letter.city}, {letter.country}</p>\n                            <button href=\"#\" className=\"btn btn-primary\" onClick={this.handleDetailsClick} value={value}>More details</button>\n                        </div>\n                    </div>\n                );\n        });\n        else{\n            return (<div className=\"card container col\" key='empty'></div>);\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8080/letters/all')\n        .then((response) => {\n        this.setState({letters: response});\n        })\n        }\n\n    handleDetailsClick = (event) => {\n        event.preventDefault()\n        console.log(event.currentTarget.value)\n    }\n}\nexport default LetterList;\n","import React, {Component} from 'react';\nimport LetterList from '../Categories/LetterList'\n\nclass Dovanos extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        };\n    }\n    render () {\n        return (<div className='container'>\n            <div>\n                <LetterList/>\n            </div>\n        </div>)\n    }\n}\n\nexport default Dovanos;\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass AdminPage extends Component {\n    constructor() {\n        super();\n        this.state = {letters: {},\n        presents: {},\n        Present:{},\n        Letter:{}\n        };\n    }\n    \n    render () {\n        if(this.state.letters.data !== undefined & this.state.presents.data !== undefined){\n            var comp1 = this.state.letters.data.map(letter => {\n                return (\n                <div className=\"container\">\n                    <div className=\"card col\" key={letter.id}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{letter.name} {letter.surname}</h5>\n                                 <p>{letter.body}</p>\n                        <p className=\"card-text\">This letter came from:{letter.adress}, {letter.city}, {letter.country}</p>\n                        <button href=\"#\" className=\"btn btn-primary\" onClick={this.handleDeleteLetterClick.bind(this)} value={letter.id}>Delete</button>\n                    </div>\n                </div>\n                </div>\n                    \n                );\n        });\n        var comp2 = this.state.presents.data.map(present => {\n                return (\n                    <div className=\"container\">\n                    <div className=\"card col\" key={present.id}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{present.name}</h5>\n                            <p className=\"card-text\">{present.description}</p> \n                            <p className=\"card-text\">This present has to be sent to: {present.adress} and {present.type}</p>\n                            <button href=\"#\" className=\"btn btn-primary\" onClick={this.handleDeletePresentClick.bind(this)} value={present.id}>Delete</button>\n                        </div>\n                    </div>\n                    </div>\n                );\n        });\n        \n        return (<div>\n                <div className='row container'>\n                <h1>Dovanos</h1>\n                {comp1}\n                <br/>\n                <h1>Laiskai</h1>\n                <br/>\n                {comp2}\n                </div>\n                <form>\n                    <div className=\"form-group\">\n                        <label>Vardas</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Letter.name}/>\n                    </div>   \n                    <div className=\"form-group\">\n                        <label>Pavarde</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Letter.surname}/>\n                    </div>       \n                    <div className=\"form-group\">\n                        <label>Miestas</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Letter.city}/>\n                    </div>  \n                    <div className=\"form-group\">\n                        <label>Salis</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Letter.country}/>\n                    </div>  \n                    <div className=\"form-group\">\n                        <label>Adresas</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Letter.adress}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Laiskas</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Letter.body}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Dovanos pavadinimas</label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.Present.name}/>\n                    </div>                    \n                    <div className=\"form-group\">\n                      <label for=\"exampleFormControlSelect1\">Dovanos tipas</label>\n                      <select class=\"form-control\" value={this.state.Present.type}>\n                        <option>žaislas</option>\n                        <option>įvykis</option>\n                        <option>gyvūnas</option>\n                      </select>\n                    </div>\n                    <div className=\"form-group\">\n                    <label>Dovanos apibudinimas</label>\n                    <input type=\"text\" className=\"form-control\" value={this.state.Present.description}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label>Dovanos nuotrauka</label>\n                    <input type=\"URL\" className=\"form-control\" value={this.state.Present.imageURL}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label>Ar dovana skirta suaugusiems</label>\n                    <select class=\"form-control\" value={this.state.Present.forAdults}>\n                        <option>True</option>\n                        <option>False</option>\n                      </select>\n                    </div>\n                    <button href=\"#\" className=\"btn btn-primary\" onClick={this.handleCreatePresentClick}>Create Present</button>\n                </form>\n                </div>)}\n                \n\n                else\n                return (<div>\n                    </div>);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8080/letters/all')\n        .then((response) => {\n        this.setState({letters: response});\n        });\n        axios.get('http://localhost:8080/presents/all')\n        .then((response) => {\n        this.setState({presents: response});\n        })\n        }\n\n    handleDeleteLetterClick = (event) => {\n        event.preventDefault()\n        axios.delete('http://localhost:8080/letters/delete/', this.letter)\n    }\n\n    handleDeletePresentClick = (event) => {\n        event.preventDefault()\n        axios.delete('http://localhost:8080/presents/delete/', this.present)\n    }\n\n    handleCreatePresentClick = (event) => {\n        event.preventDefault();\n        axios.post('http://localhost:8080/presents/create', (this.state.Present), (this.state.Letter));\n    }\n}\nexport default AdminPage;\n","import React, {Component} from 'react';\nimport AdminPage from '../Categories/AdminPage'\n\nclass Dovanos extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        };\n    }\n    render () {\n        return (<div className='container'>\n            <div>\n                <AdminPage/>\n            </div>\n        </div>)\n    }\n}\n\nexport default Dovanos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Switch, Redirect, Route} from 'react-router';\nimport {BrowserRouter, Link} from 'react-router-dom';\nimport Navigation from './Components/Navigation/Navigation';\nimport Laiskai from \"./Components/Home/Laiskai\"\nimport Administracija from './Components/Home/Administracija'\n\nvar handleClick = () => {\n\n}\n\nvar LaiskaiComponent = (props) => {\n    return (\n        <div className='container'>\n            <header className=\"container\">\n            <div>\n                <Navigation/>\n            </div>\n            </header>\n                <Laiskai/>\n            <div className='container row'>\n            </div>\n        </div>\n    );\n}\nvar Admin = (props) => {\n    return (\n        <div className='container'>\n        <header className=\"container\">\n        <div>\n            <Navigation/>\n        </div>\n        </header>\n        <div>\n            <Administracija/>\n        </div>\n        </div>\n    );\n}\n\n\nReactDOM.render(\n    <BrowserRouter>\n    <Switch>\n        <Route name=\"Dovanos\" exact path='/' component={App} key='Dovanos'/>\n        <Route name=\"Laiskai\" path=\"/laiskai\" component={LaiskaiComponent} key='Laiskai'/>\n        <Route path=\"/administration\" component={Admin} key='Administracija'/>\n    </Switch>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: https://bit.ly/CRA - PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}